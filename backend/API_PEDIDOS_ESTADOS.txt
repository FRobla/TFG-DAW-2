# API DE GESTIÓN DE PEDIDOS - SISTEMA DE ESTADOS

## ESTADOS PERMITIDOS (4 estados únicamente):

1. **pendiente** - Pedido creado, esperando confirmación manual de pago desde dashboard
2. **en_proceso** - Pago confirmado automáticamente (PayPal) o manualmente desde dashboard, pedido en procesamiento  
3. **completado** - Pedido finalizado y entregado (marcado manualmente desde dashboard)
4. **cancelado** - Pedido cancelado (puede ser desde pendiente o en_proceso), incluye cancelaciones por cliente

## TRANSICIONES DE ESTADO VÁLIDAS:

### Desde "pendiente":
- **pendiente → en_proceso**: Cuando el administrador confirma el pago manualmente O cuando se procesa automáticamente por PayPal
- **pendiente → cancelado**: Cuando se cancela el pedido antes del pago

### Desde "en_proceso":  
- **en_proceso → completado**: Cuando el administrador marca el pedido como completado
- **en_proceso → cancelado**: Cuando se requiere cancelar después del pago

### Estados finales:
- **completado**: Estado final, no permite más transiciones
- **cancelado**: Estado final, no permite más transiciones

## NUEVOS ENDPOINTS PARA GESTIÓN MANUAL:

### 1. Confirmar Pago (pendiente → en_proceso)
**PUT** `/api/pedido/{id}/confirmar-pago`

**Descripción**: Confirma el pago de un pedido manualmente desde el dashboard administrativo.

**Body** (opcional):
```json
{
  "metodoPago": "paypal|tarjeta|transferencia|efectivo",
  "referenciaPago": "REF123456"
}
```

**Respuesta exitosa** (200):
```json
{
  "mensaje": "El pago del pedido ha sido confirmado con éxito",
  "pedido": {
    "id": 1,
    "numero_pedido": "PED123456",
    "estado": "en_proceso",
    "metodo_pago": "paypal",
    "referencia_pago": "REF123456",
    // ... resto de campos del pedido
  }
}
```

**Errores**:
- 404: Pedido no encontrado
- 400: Solo se puede confirmar el pago de pedidos pendientes

### 2. Marcar como Completado (en_proceso → completado)
**PUT** `/api/pedido/{id}/marcar-completado`

**Descripción**: Marca un pedido como completado manualmente desde el dashboard.

**Body**: No requiere cuerpo

**Respuesta exitosa** (200):
```json
{
  "mensaje": "El pedido ha sido marcado como completado con éxito",
  "pedido": {
    "id": 1,
    "numero_pedido": "PED123456", 
    "estado": "completado",
    "fecha_entrega_real": "2024-01-15T10:30:00.000Z",
    // ... resto de campos del pedido
  }
}
```

**Errores**:
- 404: Pedido no encontrado  
- 400: Solo se pueden completar pedidos que estén en proceso

### 3. Checkout desde Carrito (NUEVO)
**POST** `/api/pedidos/checkout`

**Descripción**: Procesa el checkout del carrito creando un pedido automáticamente. Integrado con PayPal.

**Body**:
```json
{
  "usuarioId": 1,
  "metodoPago": "paypal",
  "referenciaPago": "PAYPAL_TRANSACTION_ID",
  "direccionEnvio": "Calle Principal 123",
  "codigoPostal": "28001",
  "ciudad": "Madrid",
  "provincia": "Madrid",
  "notasCliente": "Entrega por la mañana",
  "estado": "en_proceso",
  "notasInternas": "Pago automático PayPal"
}
```

**Respuesta exitosa** (201):
```json
{
  "mensaje": "Pedido creado exitosamente",
  "pedido": {
    "id": 1,
    "numero_pedido": "PED1705123456789",
    "estado": "en_proceso",
    "total": 89.99,
    "metodo_pago": "paypal",
    "referencia_pago": "PAYPAL_TRANSACTION_ID",
    "usuario": {
      "id": 1,
      "nombre": "Juan Pérez"
    },
    "detallesPedido": [
      {
        "anuncio": {
          "titulo": "Modelo 3D Personalizado"
        },
        "cantidad": 2,
        "precio_unitario": 44.99,
        "subtotal": 89.98,
        "especificaciones": "Material: PLA, Color: Azul, Acabado Premium: Sí"
      }
    ]
  }
}
```

**Errores**:
- 400: usuarioId es requerido
- 400: El carrito está vacío. No se puede crear el pedido.
- 400: Usuario no encontrado
- 500: Error interno del servidor

**Funcionalidad**:
- Convierte automáticamente el carrito del usuario en un pedido
- Crea los detalles del pedido basados en los elementos del carrito
- Vacía el carrito después de crear el pedido exitosamente
- Soporta tanto pagos completados (estado "en_proceso") como cancelados (estado "cancelado")

## ACCIONES DEL DASHBOARD POR ESTADO:

### Pedidos PENDIENTES:
- **Confirmar Pago**: Cambiar a estado "en_proceso"
- **Ver Detalles**: Mostrar información completa
- **Cancelar**: Cambiar a estado "cancelado"

### Pedidos EN PROCESO:
- **Ver Detalles**: Mostrar información completa
- **Marcar Completado**: Cambiar a estado "completado"  
- **Cancelar**: Cambiar a estado "cancelado"

### Pedidos COMPLETADOS:
- **Editar**: Modificar información del pedido
- **Ver Detalles**: Mostrar información completa
- **Eliminar**: Eliminar el pedido del sistema

### Pedidos CANCELADOS:
- **Editar**: Modificar información del pedido
- **Ver Detalles**: Mostrar información completa  
- **Eliminar**: Eliminar el pedido del sistema

## WORKFLOW RECOMENDADO:

### Flujo Automático (PayPal):
1. **Creación**: Usuario realiza checkout desde carrito con PayPal
2. **Pago exitoso**: Pedido se crea automáticamente en estado "en_proceso"  
3. **Procesamiento**: Admin gestiona el pedido internamente
4. **Finalización manual**: Admin marca como completado → "completado"

### Flujo Manual (Tradicional):
1. **Creación**: Pedido se crea manualmente en estado "pendiente"
2. **Confirmación manual**: Admin revisa y confirma pago → "en_proceso"  
3. **Procesamiento**: Admin gestiona el pedido internamente
4. **Finalización manual**: Admin marca como completado → "completado"

### Cancelaciones:
- **Automáticas**: Usuario cancela el pago en PayPal → Pedido en estado "cancelado" con nota "Cancelado por el cliente"
- **Manuales**: Admin puede cancelar en cualquier momento antes de completar

## VALIDACIONES IMPLEMENTADAS:

- Solo se pueden confirmar pagos de pedidos "pendientes"
- Solo se pueden completar pedidos "en_proceso"  
- Solo se pueden cancelar pedidos "pendientes" o "en_proceso"
- Los estados "completado" y "cancelado" son finales
- El checkout automático valida que el carrito no esté vacío
- El checkout automático valida que el usuario exista
- Todas las transiciones manuales requieren confirmación desde dashboard 